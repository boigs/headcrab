name: Rust

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: ${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  SERVICE_IMAGE_NAME: localhost:32000/headcrab
  CARGO_TERM_COLOR: always
  RUST_VERSION: 1.77.0

jobs:
  test-solution:
    name: Solution -> Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: ./.github/actions/test-solution
        with:
          version: ${{ env.RUST_VERSION }}

  publish-service-image:
    name: Service Image -> Publish
    needs: [test-solution]
    runs-on: self-hosted
    outputs:
      image-sha-tag: ${{ steps.image.outputs.image-sha-tag }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Service Image -> Publish
        id: image
        uses: ./.github/actions/publish-image
        with:
          dockerfile-path: ./Dockerfile
          image-name: ${{ env.SERVICE_IMAGE_NAME }}
          build-args: RUST_VERSION=${{ env.RUST_VERSION }}

  test-infra:
    name: Infastructure -> Test
    needs: [publish-service-image]
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Service -> Deploy
        uses: ./.github/actions/deploy-service
        with:
          image-name: ${{ needs.publish-service-image.outputs.image-sha-tag }}

  deploy-service:
    name: Service -> Deploy
    needs: [publish-service-image, test-infra]
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Service -> Deploy
        uses: ./.github/actions/deploy-service
        with:
          image-name: ${{ needs.publish-service-image.outputs.image-sha-tag }}
