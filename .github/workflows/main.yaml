name: Headcrab

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, edited, synchronize]
  workflow_dispatch:

concurrency:
  group: ${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  SERVICE_IMAGE_NAME: localhost:32000/headcrab
  CARGO_TERM_COLOR: always
  RUST_VERSION: 1.77.0

jobs:
  check-conventional-commit:
    name: Check Conventional Commit
    runs-on: ubuntu-latest
    steps:
      - name: check-for-cc
        if: github.ref != 'refs/heads/main'
        id: check-for-cc
        uses: agenthunt/conventional-commit-checker-action@v2.0.0
        with:
          pr-body-regex: ".*"

  test-solution:
    name: Solution -> Test
    needs: [check-conventional-commit]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: ./.github/actions/test-solution
        with:
          version: ${{ env.RUST_VERSION }}

  publish-service-image:
    name: Service Image -> Publish
    needs: [test-solution]
    runs-on: self-hosted
    outputs:
      image-sha-tag: ${{ steps.image.outputs.image-sha-tag }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Service Image -> Publish
        id: image
        uses: ./.github/actions/publish-image
        with:
          dockerfile-path: ./Dockerfile
          image-name: ${{ env.SERVICE_IMAGE_NAME }}
          build-args: RUST_VERSION=${{ env.RUST_VERSION }}

  deploy-service:
    name: Service -> Deploy
    needs: [publish-service-image]
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set the Service Docker image to deploy in k8s.yaml
        shell: bash
        run: sed -i -E "s#headcrab_image#${{ needs.publish-service-image.outputs.image-sha-tag }}#g" k8s.yaml

      - name: K8s -> Test
        uses: ./.github/actions/test-k8s
        with:
          file: k8s.yaml

      - name: K8s -> Deploy
        uses: ./.github/actions/deploy-k8s
        with:
          file: k8s.yaml
