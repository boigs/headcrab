name: Rust
on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.ref || github.run_id }}
  cancel-in-progress: true    

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Cargo Test
        run: cargo test --all-features
    
  format:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Cargo Format
        run: cargo fmt --all --check

  linter:
    name: Linter Check
    runs-on: ubuntu-latest
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Cargo Clippy
        run: cargo clippy -- -D warnings

  build-deploy:
    name: Build and Deploy
    if: github.ref == 'refs/heads/main'
    needs: [test, format, linter]
    runs-on: self-hosted
    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Create Image Name
        id: image_name
        run: |
          cargo install cargo-get
          image_name=$(cargo get package.name):$(cargo get package.version)
          echo "value=$image_name" >> $GITHUB_OUTPUT
      - name: Build the Docker image
        run: docker build . --tag localhost:32000/${{ steps.image_name.outputs.value }}
      - name: Push the Docker image to microk8s's registry
        run: docker push localhost:32000/${{ steps.image_name.outputs.value }}
      - name: Deploy
        run: microk8s kubectl apply -f k8s.yaml
      - name: Increment version for next release 
        run: |
          cargo install cargo-edit
          cargo set-version --bump patch
      - name: Commit new version
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "[AUTO] Increment version for next deployment"
          git push
